name: Go with GolangCI-Lint

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v2.1
  MODULES: "./pkg ./shared ./menu-service ./order-service ./kitchen-service ./payment-service ./table-service"

jobs:
  golangci-lint-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      # Configure workspace and download dependencies
      - name: Configure Workspace and Install Dependencies
        run: |
          go work init
          go work use ${{ env.MODULES }}
          for module in ${{ env.MODULES }}; do
            cd $module
            go mod tidy
            go mod download
            cd ..
          done

      # Run golangci-lint
      - name: Run GolangCI-Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

      # Run tests for each module
      - name: Run Tests
        run: |
          for module in ${{ env.MODULES }}; do
            echo "Running tests for $module"
            cd $module
            go test -v ./...
            cd ..
          done

  build:
    runs-on: ubuntu-latest
    needs: golangci-lint-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure Workspace and Build
        run: |
          go work init
          go work use ${{ env.MODULES }}
          for module in ${{ env.MODULES }}; do
            echo "Building $module"
            cd $module
            go build -o app cmd/main.go || exit 1
            cd ..
          done