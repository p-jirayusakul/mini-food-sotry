name: Go with GolangCI-Lint

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v2.1
  MODULES: "./pkg ./shared ./menu-service ./order-service ./kitchen-service ./payment-service ./table-service"

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure Workspace and Install Dependencies
        run: |
          go work init
          go work use ${{ env.MODULES }}

      - id: set-modules
        run:
          echo "modules=$(git diff --name-only origin/main...HEAD \
          | grep -E '^(kitchen-service|menu-service|order-service|payment-service|table-service|pkg|shared)/' \
          | cut -d/ -f1 \
          | sort -u \
          | xargs -I{} realpath {} \
          | jq -R -s -c 'split("\n") | map(select(length > 0))')"
#          echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT

  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Configure Workspace and Install Dependencies
        run: |
          go work init
          go work use ${{ env.MODULES }}
          cd ${{ matrix.modules }} && go mod tidy && go mod download

      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.modules }}

  test:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure Workspace and Install Dependencies
        run: |
          go work init
          go work use ${{ env.MODULES }}
          cd ${{ matrix.modules }} && go mod tidy && go mod download

      - name: Run Tests
        run: |
          cd ${{ matrix.modules }}
          go test -v ./...

      - id: set-modules
        run:
          echo "modules=$(go list -m -json all | jq -s '[.[] | select(.Dir | test("shared|pkg") | not) | .Dir]' -c)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [ golangci-lint, test ]
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.test.outputs.modules) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure Workspace and Install Dependencies
        run: |
          go work init
          go work use ${{ env.MODULES }}
          cd ${{ matrix.modules }} && go mod tidy && go mod download

      - name: Build
        run: |
          cd ${{ matrix.modules }}
          go build -o app cmd/main.go