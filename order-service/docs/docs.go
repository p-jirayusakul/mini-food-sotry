// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/current": {
            "get": {
                "description": "Get current order details for the given session ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get order details by session ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapter_http.CurrentOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new order with items for current table session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create new order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Order item details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapter_http.OrderItems"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/middleware.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/current/items": {
            "get": {
                "description": "Get all order items for the current table session with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get order items for current session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/food-story_order-service_internal_domain.SearchCurrentOrderItemsResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new items to an existing order for current table session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Add items to an existing order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Order items to add",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapter_http.OrderItems"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/middleware.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/current/items/{orderItemsID}": {
            "get": {
                "description": "Get specific order item details for current table session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get order item details by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Item ID",
                        "name": "orderItemsID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.OrderItems"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/current/items/{orderItemsID}/status/cancel": {
            "patch": {
                "description": "Update order item status to cancelled for current table session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Cancel order item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Item ID",
                        "name": "orderItemsID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{id}/items/status/incomplete": {
            "get": {
                "description": "Search incomplete order items with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Search incomplete order items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "X-Session-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by status codes",
                        "name": "statusCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by field",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order direction (asc, desc)",
                        "name": "orderType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/middleware.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/food-story_order-service_internal_domain.SearchOrderItemsResult"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "food-story_order-service_internal_domain.CurrentOrderItems": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2025-05-23T11:59:50.010316+07:00"
                },
                "id": {
                    "type": "string",
                    "example": "1920153361642950656"
                },
                "note": {
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "price": {
                    "type": "number",
                    "example": 60
                },
                "productID": {
                    "type": "string",
                    "example": "1920153361642950656"
                },
                "productName": {
                    "type": "string",
                    "example": "ข้าวผัด"
                },
                "productNameEN": {
                    "type": "string",
                    "example": "Fried rice"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                },
                "statusCode": {
                    "type": "string",
                    "example": "PREPARING"
                },
                "statusName": {
                    "type": "string",
                    "example": "กำลังเตรียมอาหาร"
                },
                "statusNameEN": {
                    "type": "string",
                    "example": "Preparing"
                }
            }
        },
        "food-story_order-service_internal_domain.SearchCurrentOrderItemsResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/food-story_order-service_internal_domain.CurrentOrderItems"
                    }
                },
                "totalItems": {
                    "type": "integer",
                    "example": 10
                },
                "totalPages": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "food-story_order-service_internal_domain.SearchOrderItemsResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrderItems"
                    }
                },
                "totalItems": {
                    "type": "integer",
                    "example": 10
                },
                "totalPages": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_adapter_http.CurrentOrderResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "example": "CONFIRMED"
                },
                "statusName": {
                    "type": "string",
                    "example": "ยืนยันออเดอร์"
                },
                "statusNameEN": {
                    "type": "string",
                    "example": "Confirmed"
                },
                "tableNumber": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_adapter_http.OrderItems": {
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_adapter_http.OrderItemsData"
                    }
                }
            }
        },
        "internal_adapter_http.OrderItemsData": {
            "type": "object",
            "required": [
                "productID",
                "quantity"
            ],
            "properties": {
                "note": {
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "productID": {
                    "type": "string",
                    "example": "1921828287366041600"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "middleware.ErrorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "middleware.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "do something completed"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "model.OrderItems": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2025-05-23T13:50:36+07:00"
                },
                "id": {
                    "type": "string",
                    "example": "1920153361642950656"
                },
                "note": {
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "orderID": {
                    "type": "string",
                    "example": "1921828287366041600"
                },
                "orderNumber": {
                    "type": "string",
                    "example": "FS-20250523-0001"
                },
                "price": {
                    "type": "number",
                    "example": 60
                },
                "productID": {
                    "type": "string",
                    "example": "1921822053405560832"
                },
                "productName": {
                    "type": "string",
                    "example": "ข้าวผัด"
                },
                "productNameEN": {
                    "type": "string",
                    "example": "Fried rice"
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                },
                "statusCode": {
                    "type": "string",
                    "example": "PREPARING"
                },
                "statusID": {
                    "type": "string",
                    "example": "1921868485739155458"
                },
                "statusName": {
                    "type": "string",
                    "example": "กำลังเตรียมอาหาร"
                },
                "statusNameEN": {
                    "type": "string",
                    "example": "Preparing"
                },
                "tableNumber": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
